plugins {
    id("maven-publish")
}

group = "com.tcoded"

allprojects {
    apply(plugin = "java")

    version = "0.4.3"

    repositories {
        mavenCentral()

        maven {
            url = uri("https://hub.spigotmc.org/nexus/content/repositories/snapshots/")
        }

        maven {
            url = uri("https://hub.spigotmc.org/nexus/content/repositories/public/")
        }

        maven {
            url = uri("https://repo.papermc.io/repository/maven-public/")
        }

        maven {
            url = uri("https://nexuslite.gcnt.net/repos/paper/")
        }
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    dependencies {
        implementation("org.jetbrains:annotations:23.0.0")

        testImplementation(platform("org.junit:junit-bom:5.9.1"))
        testImplementation("org.junit.jupiter:junit-jupiter")
    }

    tasks.test {
        useJUnitPlatform()
    }
}

tasks.assemble {
    dependsOn(tasks.clean)
}

subprojects.forEach { subproject ->
    evaluationDependsOn(subproject.path)
}

tasks.register<Jar>("allJar") {
    dependsOn("compileJava", "jar", subprojects.tasks["build"])
    subprojects.forEach { subproject ->
        from(subproject.configurations.archives.get().allArtifacts.files.map {
            zipTree(it)
        })
    }
}

artifacts {
    add("archives", tasks.named("allJar").get())
}

publishing {
    publications {
        create<MavenPublication>("mavenJava") {
            from(components["java"])
        }
    }
}

tasks.named("generateMetadataFileForMavenJavaPublication") {
    dependsOn(tasks.named("allJar"))
}

val enablePublishing: Boolean = project.findProperty("enablePublishing")?.toString()?.toBoolean() == true

if (enablePublishing) {
    publishing {
        publications {
            create<MavenPublication>("mavenJava") {
                from(components["java"])
            }
        }

        repositories {
            maven {
                name = "reposilite"
                url = uri("https://repo.tcoded.com/releases")

                credentials {
                    username = System.getenv("REPOSILITE_USER")
                            ?: error("Environment variable REPOSILITE_USER is not set")
                    password = System.getenv("REPOSILITE_PASS")
                            ?: error("Environment variable REPOSILITE_PASS is not set")
                }

                authentication {
                    create<BasicAuthentication>("basic")
                }
            }
        }
    }

    tasks.assemble {
        dependsOn(tasks.named("publishToMavenLocal"))
    }
}